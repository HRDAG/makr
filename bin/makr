#! /usr/bin/env python3
#
# Author(s):  PB
# Maintainer: PB
# Created:    20181216
# License:    (c) 2018 HRDAG, GPL-v2 or greater
# ============================================
#
# :input: path to an HRDAG task
# :on stdout: list of paths that this task depends from earliest to latest
# :on stderr: messages about discovered dependencies and execution order
#             for human consumption, if --verbose
# ============================================

import argparse
import os
from pathlib import Path
import makr as ut   # upstream_tasks, if you were wondering


def get_args():
    parser = argparse.ArgumentParser(
        description="runs make, maybe recursively")

    parser.add_argument('starting_task', action="store",
                        type=str, default='.', nargs='?',
                        help="task to make")

    parser.add_argument('-r', '--recursive', action="store_true",
                        default=False, required=False,
                        help="recurse through dependencies")

    parser.add_argument('-v', '--verbose', action="store_true", default=False,
                        help="Show dependency search on stderr.")
    return parser.parse_args()


def main(args):
    ''' called from cmdline invocation '''
    pth = Path(args.starting_task).resolve()
    if args.recursive:
        ut.make_all(str(pth))
    else:
        os.chdir(pth)
        ut.exec_make(['make'])


if __name__ == '__main__':
    args = get_args()
    main(args)

# done.
