#! /usr/bin/env python3
#
# Author(s):  PB
# Maintainer: PB
# Created:    20181216
# License:    (c) 2018 HRDAG, GPL-v2 or greater
#
# makr/bin/getdeps
# ============================================
#
# :input: path to an HRDAG task
# :on stdout: list of paths that this task depends from earliest to latest
# :on stderr: messages about discovered dependencies and execution order
#             for human consumption, if --verbose
# ============================================

import argparse
import os
import sys
from pathlib import Path
import makr as ut   # upstream_tasks, if you were wondering


def get_args():
    parser = argparse.ArgumentParser(
        description=("given starting_task and target,"
                     " writes file dependencies to stdout"))

    parser.add_argument('starting_task', action="store",
                        type=str, default='.', nargs='?',
                        help="task to make")

    parser.add_argument('-t', '--target',
                        required=True, type=str,
                        help="target in Makefile for dependencies")

    return parser.parse_args()


def main(args):
    ''' called from cmdline invocation '''
    pth = Path(args.starting_task).resolve()
    os.chdir(pth)
    deps = ut.get_deps_from_make(pth, target=args.target)
    print(' '.join(deps), file=sys.stdout)


if __name__ == '__main__':
    args = get_args()
    main(args)

# done.
